"use strict";self.addEventListener("load",()=>{if(window.Notification&&Notification.permission!=="granted"){Notification.requestPermission(a=>{if(Notification.permission!==a){Notification.permission=a}})}});self.addEventListener("install",a=>{a.waitUntil(caches.open("RestRevApp").then(cache=>cache.addAll(["/index.html","/README.md","/css/main.css","/js/main.js","/js/categories.json","/img/256px-Carte_Printemps_Spring_menu_Switzerland_Michelin_starred_restaurant.jpg","/img/512px-Carte_Printemps_Spring_menu_Switzerland_Michelin_starred_restaurant.jpg","/img/1024px-Carte_Printemps_Spring_menu_Switzerland_Michelin_starred_restaurant.jpg"])))});self.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(cacheNames=>Promise.all(cacheNames.filter(cacheName=>cacheName!=="RestRevApp").map(b=>{console.log("Deleting "+b);return caches.delete(b)}))))});self.addEventListener("fetch",a=>{console.log("WORKER: fetch event in progress.");if(a.request.method!=="GET"){console.log("WORKER: fetch event ignored.",a.request.method,a.request.url);return}a.respondWith(caches.match(a.request).then(b=>{var e=fetch(a.request).then(c,d).catch(d);console.log("WORKER: fetch event",b?"(cached)":"(network)",a.request.url);return b||e;function c(f){var g=f.clone();console.log("WORKER: fetch response from network.",a.request.url);caches.open("RestRevApp").then(h=>{h.add(a.request)}).then(()=>{console.log("WORKER: fetch response stored in cache.",a.request.url)});return f}function d(){console.log("WORKER: fetch request failed in both cache and network.");return new Response("<h1>Service Unavailable</h1>",{status:503,statusText:"We can not get data, sorry",headers:new Headers({"Content-Type":"text/html"})})}}))});